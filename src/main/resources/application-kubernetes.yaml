spring:
  datasource:
    url: jdbc:mysql://mysql-service:3306/testdb?useUnicode=true&characterEncoding=utf8&useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
    username: testuser
    password: testpass

  rabbitmq:
    host: crud-app-rabbitmq
    port: 5672
    username: guest
    password: guest
param:
  land-name: kube-land
  land-service: kube-land
  microserv1-name: kube-ms1
  microserv1-service: kube-ms1
  api-service: api-service
  auth-service-name: kube-auth
  auth-service: kube-auth
  notifications-name: kube-notifications
  notifications-service: notifications-service

management:
  tracing:
    sampling:
      probability: 1.0  # Temporar seteazÄƒ la 100% pentru testare
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true


metrics:
  distribution:
    percentiles-histogram:
      http:
        server:
          requests: true

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    root: debug
    org.springframework.amqp: info
  file:
    name: kube-land-logs.log
